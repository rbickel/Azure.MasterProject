apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    email: raphael.bickel@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # Secret resource that will be used to store the account's private key.
      name: masteraks-issuer-account-key
    solvers:
    - dns01:
        azureDNS:
          clientID: 9bb20271-8cbb-4e35-9c01-606ae933c628
          clientSecretSecretRef:
          # The following is the secret we created in Kubernetes. Issuer will use this to present challenge to Azure DNS.
            name: azuredns-config
            key: client-secret
          tenantID: 3b984aeb-3b42-4e93-b695-cb55090e7acb
          subscriptionID: 770f584e-26a4-4974-95eb-aec756fcd6fc
          resourceGroupName: dns
          hostedZoneName: masteraks.rbkl.io
          # Azure Cloud Environment, default to AzurePublicCloud
          environment: AzurePublicCloud
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: keycloak-masteraks-rbkl-io
spec:
  # Secret names are always required.
  secretName: keycloak-masteraks-rbkl-io
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - rbkl.io
  commonName: keycloak.masteraks.rbkl.io
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
  dnsNames:
  - keycloak.masteraks.rbkl.io
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: artifactory-masteraks-rbkl-io
  namespace: artifactory
spec:
  # Secret names are always required.
  secretName: artifactory-masteraks-rbkl-io
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
    - rbkl.io
  commonName: artifactory.masteraks.rbkl.io
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
  dnsNames:
  - artifactory.masteraks.rbkl.io
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer    
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
  labels:
    app: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak  
    spec:
      containers:
      - image: quay.io/keycloak/keycloak:14.0.0
        imagePullPolicy: Always
        name: keycloak
        ports:
        - containerPort: 8080
        env:
          - name: KEYCLOAK_PASSWORD
            value: admin
          - name: KEYCLOAK_USER
            value: admin
          - name: PROXY_ADDRESS_FORWARDING
            value: "true"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: keycloak-svc
  name: keycloak-svc
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app: keycloak
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: keycloak-ingress
spec:
  rules:
  - host: keycloak.masteraks.rbkl.io
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: keycloak-svc
            port:
              number: 443
  tls:
  - secretName: keycloak-masteraks-rbkl-io
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: artifactory-ingress
  namespace: artifactory
spec:
  rules:
  - host: artifactory.masteraks.rbkl.io
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: artifactory
            port:
              number: 8082
  tls:
  - secretName: artifactory-masteraks-rbkl-io  